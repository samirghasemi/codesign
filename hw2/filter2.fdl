dp filter(
        in a : tc(8);
        out r : tc(16)
        )
{
    lookup c : tc(8) = {-1, 5, 10, 5, -1};
    reg i,acc , mul :tc(8);
    reg taps0 , taps1,taps2,taps3,taps4,temp : tc(8);
    
    always{
        r = acc;
        // $display("clk= ",$cycle ," r= " , r , " a= " , a);
    }

    sfg init{
        taps0 = 1;
        taps1 = 2;
        taps2 = 3;
        taps3 = 4;
        taps4 = 5;
        i = 0;
        acc = 0;
    }
    
    sfg maketaps{
        // $display("inter to maketaps");
        taps4=a;
        taps3=taps4;
        taps2=taps3;
        taps1=taps2;
        taps0=taps1;
        mul = 0;
    }

    sfg multiplier{
        // $display("inter to multiplier");
        temp = (i==0) ? 
            taps0
            :
            i==1 ?
            taps1
            :
            i==2 ?
            taps2
            :
            i==3 ?
            taps3
            :
            taps4;
        // $display(temp);    
    }

    sfg mult {
        mul = temp * c(i);
        i= i+1;        
    }

    sfg accumulator{
        // $display("inter to accumulator " , "mul=" , mul , "temp= " , temp , "i= " , i);
        acc = mul + acc;
    }

    sfg done{
        $display("clk= ",$cycle ," result= " , r , " input= " , temp);
    }
}

fsm filter_ctl(filter) {
    initial s0;
    state s1 ,s2 , s3 ,s4,s5;
    @s0(init) -> s1;
    @s1(maketaps) -> s2;
    @s2 if (i<5) then (multiplier)-> s5;
                 else (done)-> s4;
    @s3 (accumulator) -> s2;
    @s4 (init) -> s0;
    @s5 (mult) -> s3;
}

dp TB(
    out a:ns(8)
    )
{
    reg b:ns(8);
    always{
        a = b;
    }

    sfg run{
        b = b + 1;
    }
}

hardwired TB_ctl(TB){run;}

dp sysfilter{
    sig a : ns(8);
    sig r : ns(16);

    use TB(a);
    use filter(a,r);
}


system S {
	sysfilter;
}
